/*
 * Copyright (c) 2020 Jo√£o Pedro Martins Neves (SHIVAYL) - All Rights Reserved.
 *
 * RegexQuery and all its contents are licensed under the GNU General Public License v3.0
 * (GPL-3.0), located in the root folder, under the name "LICENSE.md".
 *
 */

Bridge.assembly("RegexQuery",function($asm,globals){"use strict";(function(root,factory){typeof define=="function"&&define.amd?define("RegexQuery",factory):typeof module=="object"&&module.exports?module.exports=factory():root.RegexQuery=factory()})(this,function(){var RegexQuery={};return Bridge.define("RegexTokens",{$metadata:function(){return{att:1048961,a:2,s:!0,m:[{a:4,n:"CharsBetween",is:!0,t:8,pi:[{n:"fromChar",pt:System.Char,ps:0},{n:"toChar",pt:System.Char,ps:1}],sn:"CharsBetween",rt:System.String,p:[System.Char,System.Char]},{a:4,n:"QuantityOfPreceding",is:!0,t:8,pi:[{n:"quantity",pt:System.UInt32,ps:0}],sn:"QuantityOfPreceding",rt:System.String,p:[System.UInt32]},{a:2,n:"AnyCharExceptNewLine",is:!0,t:4,rt:System.String,sn:"AnyCharExceptNewLine"},{a:2,n:"CarriageReturn",is:!0,t:4,rt:System.String,sn:"CarriageReturn"},{a:2,n:"Digit",is:!0,t:4,rt:System.String,sn:"Digit"},{a:2,n:"EndOfString",is:!0,t:4,rt:System.String,sn:"EndOfString"},{a:2,n:"FollowedBy",is:!0,t:4,rt:System.String,sn:"FollowedBy"},{a:2,n:"NewLine",is:!0,t:4,rt:System.String,sn:"NewLine"},{a:2,n:"NotDigit",is:!0,t:4,rt:System.String,sn:"NotDigit"},{a:2,n:"NotFollowedBy",is:!0,t:4,rt:System.String,sn:"NotFollowedBy"},{a:2,n:"NotWhiteSpace",is:!0,t:4,rt:System.String,sn:"NotWhiteSpace"},{a:2,n:"NotWord",is:!0,t:4,rt:System.String,sn:"NotWord"},{a:2,n:"NotWordBoundary",is:!0,t:4,rt:System.String,sn:"NotWordBoundary"},{a:2,n:"Or",is:!0,t:4,rt:System.String,sn:"Or"},{a:2,n:"StartOfString",is:!0,t:4,rt:System.String,sn:"StartOfString"},{a:2,n:"Tab",is:!0,t:4,rt:System.String,sn:"Tab"},{a:2,n:"WhiteSpace",is:!0,t:4,rt:System.String,sn:"WhiteSpace"},{a:2,n:"Word",is:!0,t:4,rt:System.String,sn:"Word"},{a:2,n:"WordBoundary",is:!0,t:4,rt:System.String,sn:"WordBoundary"}]}},$scope:RegexQuery,$module:"RegexQuery",statics:{fields:{StartOfString:null,EndOfString:null,AnyCharExceptNewLine:null,Word:null,NotWord:null,Digit:null,NotDigit:null,WhiteSpace:null,NotWhiteSpace:null,Tab:null,NewLine:null,CarriageReturn:null,WordBoundary:null,NotWordBoundary:null,FollowedBy:null,NotFollowedBy:null,Or:null},ctors:{init:function(){this.StartOfString="^";this.EndOfString="$";this.AnyCharExceptNewLine=".";this.Word="\\w";this.NotWord="\\W";this.Digit="\\d";this.NotDigit="\\D";this.WhiteSpace="\\s";this.NotWhiteSpace="\\S";this.Tab="\\t";this.NewLine="\\t";this.CarriageReturn="\\r";this.WordBoundary="\\b";this.NotWordBoundary="\\B";this.FollowedBy="!=";this.NotFollowedBy="?!";this.Or="|"}},methods:{CharsBetween:function(fromChar,toChar){return System.String.format("[{0}{1}{2}]",Bridge.box(fromChar,System.Char,String.fromCharCode,System.Char.getHashCode),RegexQuery.Separators.ForwardSlash,Bridge.box(toChar,System.Char,String.fromCharCode,System.Char.getHashCode))},QuantityOfPreceding:function(quantity){return System.String.format("{{{0}}}",[Bridge.box(quantity,System.UInt32)])}}}}),Bridge.define("Separators",{$metadata:function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Resolve",is:!0,t:8,pi:[{n:"separator",pt:RegexQuery.Separator,ps:0},{n:"regexEscape",dv:!0,o:!0,pt:System.Boolean,ps:1}],sn:"Resolve",rt:System.String,p:[RegexQuery.Separator,System.Boolean]},{a:2,n:"Resolve",is:!0,t:8,pi:[{n:"separators",pt:System.Array.type(RegexQuery.Separator),ps:0},{n:"regexEscape",dv:!0,o:!0,pt:System.Boolean,ps:1}],sn:"Resolve$1",rt:System.String,p:[System.Array.type(RegexQuery.Separator),System.Boolean]},{a:2,n:"Dot",is:!0,t:4,rt:System.String,sn:"Dot"},{a:2,n:"ForwardSlash",is:!0,t:4,rt:System.String,sn:"ForwardSlash"},{a:2,n:"Minus",is:!0,t:4,rt:System.String,sn:"Minus"}]}},$scope:RegexQuery,$module:"RegexQuery",statics:{fields:{Dot:null,ForwardSlash:null,Minus:null},ctors:{init:function(){this.Dot=".";this.ForwardSlash="/";this.Minus="-"}},methods:{Resolve$1:function(separators,regexEscape){var result,i;for(regexEscape===void 0&&(regexEscape=!0),result=new System.Text.StringBuilder,i=0;i<separators.length;i=i+1|0)result.append(RegexQuery.Separators.Resolve(separators[System.Array.index(i,separators)],regexEscape));return result.toString()},Resolve:function(separator,regexEscape){regexEscape===void 0&&(regexEscape=!0);var result="";return separator===RegexQuery.Separator.Dot||separator===RegexQuery.Separator.All?result=(result||"")+((regexEscape?System.Text.RegularExpressions.Regex.escape(RegexQuery.Separators.Dot):RegexQuery.Separators.Dot)||""):separator===RegexQuery.Separator.ForwardSlash||separator===RegexQuery.Separator.All?result=(result||"")+((regexEscape?System.Text.RegularExpressions.Regex.escape(RegexQuery.Separators.ForwardSlash):RegexQuery.Separators.ForwardSlash)||""):(separator===RegexQuery.Separator.Minus||separator===RegexQuery.Separator.All)&&(result=(result||"")+((regexEscape?System.Text.RegularExpressions.Regex.escape(RegexQuery.Separators.Minus):RegexQuery.Separators.Minus)||"")),result}}}}),Bridge.define("Separator",{$kind:"enum",$metadata:function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"All",is:!0,t:4,rt:RegexQuery.Separator,sn:"All",box:function($v){return Bridge.box($v,RegexQuery.Separator,System.Enum.toStringFn(RegexQuery.Separator))}},{a:2,n:"Dot",is:!0,t:4,rt:RegexQuery.Separator,sn:"Dot",box:function($v){return Bridge.box($v,RegexQuery.Separator,System.Enum.toStringFn(RegexQuery.Separator))}},{a:2,n:"ForwardSlash",is:!0,t:4,rt:RegexQuery.Separator,sn:"ForwardSlash",box:function($v){return Bridge.box($v,RegexQuery.Separator,System.Enum.toStringFn(RegexQuery.Separator))}},{a:2,n:"Minus",is:!0,t:4,rt:RegexQuery.Separator,sn:"Minus",box:function($v){return Bridge.box($v,RegexQuery.Separator,System.Enum.toStringFn(RegexQuery.Separator))}}]}},$scope:RegexQuery,$module:"RegexQuery",statics:{fields:{Dot:0,ForwardSlash:1,Minus:2,All:3}}}),Bridge.define("RegexQuery.Example",{$metadata:function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:1,n:"Main",t:8,sn:"Main",rt:System.Void}]}},$scope:RegexQuery,$module:"RegexQuery",methods:{Main:function(){var regexQuery1=(new RegexQuery.RegexQuery).ADate().RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginFollowedBy().RegexQuery$IRegexQueryTokens$ASpace().RegexQuery$IRegexQueryTokens$ANewLine().RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndGroup().RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ToString()}}}),Bridge.define("IRegexQueryPatterns",{$kind:"interface",$metadata:function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"ADate",t:8,sn:"RegexQuery$IRegexQueryPatterns$ADate",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ADate",t:8,pi:[{n:"separator",dv:3,o:!0,pt:RegexQuery.Separator,ps:0}],sn:"RegexQuery$IRegexQueryPatterns$ADate$1",rt:RegexQuery.IRegexQuery,p:[RegexQuery.Separator]}]}},$scope:RegexQuery,$module:"RegexQuery"}),Bridge.define("IRegexQueryTokens",{$kind:"interface",$metadata:function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"ACarriageReturn",t:8,sn:"RegexQuery$IRegexQueryTokens$ACarriageReturn",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ADigit",t:8,sn:"RegexQuery$IRegexQueryTokens$ADigit",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ANewLine",t:8,sn:"RegexQuery$IRegexQueryTokens$ANewLine",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ASpace",t:8,sn:"RegexQuery$IRegexQueryTokens$ASpace",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ATab",t:8,sn:"RegexQuery$IRegexQueryTokens$ATab",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"AWhiteSpace",t:8,sn:"RegexQuery$IRegexQueryTokens$AWhiteSpace",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"AWord",t:8,sn:"RegexQuery$IRegexQueryTokens$AWord",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"AWordBoundary",t:8,sn:"RegexQuery$IRegexQueryTokens$AWordBoundary",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"AnyCharExceptNewLine",t:8,sn:"RegexQuery$IRegexQueryTokens$AnyCharExceptNewLine",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"AtEndOfString",t:8,sn:"RegexQuery$IRegexQueryTokens$AtEndOfString",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"AtStartOfString",t:8,sn:"RegexQuery$IRegexQueryTokens$AtStartOfString",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"NotAWhiteSpace",t:8,sn:"RegexQuery$IRegexQueryTokens$NotAWhiteSpace",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"NotAWord",t:8,sn:"RegexQuery$IRegexQueryTokens$NotAWord",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"NotAWordBoundary",t:8,sn:"RegexQuery$IRegexQueryTokens$NotAWordBoundary",rt:RegexQuery.IRegexQuery}]}},$scope:RegexQuery,$module:"RegexQuery"}),Bridge.define("RegexQuery.Interfaces.IRegexQueryActions",{$kind:"interface",$metadata:function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"AnyOf",t:8,pi:[{n:"characters",pt:System.Array.type(System.Char),ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$AnyOf",rt:RegexQuery.IRegexQuery,p:[System.Array.type(System.Char)]},{ab:!0,a:2,n:"AnyOf",t:8,pi:[{n:"characters",pt:System.String,ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$AnyOf$1",rt:RegexQuery.IRegexQuery,p:[System.String]},{ab:!0,a:2,n:"BeginFollowedBy",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginFollowedBy",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"BeginGroup",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginGroup",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"BeginNotFollowedBy",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginNotFollowedBy",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"BeginningOfString",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginningOfString",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ButOnly",t:8,pi:[{n:"quantity",pt:System.UInt32,ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnly",rt:RegexQuery.IRegexQuery,p:[System.UInt32]},{ab:!0,a:2,n:"ButOnlyBetween",t:8,pi:[{n:"fromCount",pt:System.UInt32,ps:0},{n:"toCount",pt:System.UInt32,ps:1}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyBetween",rt:RegexQuery.IRegexQuery,p:[System.UInt32,System.UInt32]},{ab:!0,a:2,n:"ButOnlyMoreThan",t:8,pi:[{n:"quantity",pt:System.UInt32,ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyMoreThan",rt:RegexQuery.IRegexQuery,p:[System.UInt32]},{ab:!0,a:2,n:"ButOnlyNoneOrMore",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyNoneOrMore",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ButOnlyNoneOrOne",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyNoneOrOne",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ButOnlyOne",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyOne",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ButOnlyOneOrMore",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyOneOrMore",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"CharsBetween",t:8,pi:[{n:"fromChar",pt:System.Char,ps:0},{n:"toChar",pt:System.Char,ps:1}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$CharsBetween",rt:RegexQuery.IRegexQuery,p:[System.Char,System.Char]},{ab:!0,a:2,n:"EndFollowedBy",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndFollowedBy",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"EndGroup",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndGroup",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"EndNotFollowedBy",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndNotFollowedBy",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"EndOfString",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndOfString",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"FollowedBy",t:8,pi:[{n:"content",pt:System.String,ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$FollowedBy",rt:RegexQuery.IRegexQuery,p:[System.String]},{ab:!0,a:2,n:"Group",t:8,pi:[{n:"content",pt:System.String,ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$Group",rt:RegexQuery.IRegexQuery,p:[System.String]},{ab:!0,a:2,n:"NotAnyOf",t:8,pi:[{n:"characters",pt:System.Array.type(System.Char),ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$NotAnyOf",rt:RegexQuery.IRegexQuery,p:[System.Array.type(System.Char)]},{ab:!0,a:2,n:"NotFollowedBy",t:8,pi:[{n:"content",pt:System.String,ps:0}],sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$NotFollowedBy",rt:RegexQuery.IRegexQuery,p:[System.String]},{ab:!0,a:2,n:"Or",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$Or",rt:RegexQuery.IRegexQuery},{ab:!0,a:2,n:"ToString",t:8,sn:"RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ToString",rt:System.String}]}},$scope:RegexQuery,$module:"RegexQuery"}),Bridge.define("IRegexQuery",{inherits:[RegexQuery.RegexQuery.Interfaces.IRegexQueryActions,RegexQuery.IRegexQueryTokens,RegexQuery.IRegexQueryPatterns],$kind:"interface",$metadata:function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"Query",t:16,rt:System.String,g:{ab:!0,a:2,n:"get_Query",t:8,rt:System.String,fg:"RegexQuery$IRegexQuery$Query"},fn:"RegexQuery$IRegexQuery$Query"},{a:1,backing:!0,n:"<Query>k__BackingField",t:4,rt:System.String,sn:"RegexQuery$IRegexQuery$Query"}]}},$scope:RegexQuery,$module:"RegexQuery"}),Bridge.define("RegexQuery",{inherits:[RegexQuery.IRegexQuery],$metadata:function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ACarriageReturn",t:8,sn:"ACarriageReturn",rt:RegexQuery.IRegexQuery},{a:2,n:"ADate",t:8,sn:"ADate",rt:RegexQuery.IRegexQuery},{a:2,n:"ADate",t:8,pi:[{n:"separator",dv:3,o:!0,pt:RegexQuery.Separator,ps:0}],sn:"ADate$1",rt:RegexQuery.IRegexQuery,p:[RegexQuery.Separator]},{a:2,n:"ADigit",t:8,sn:"ADigit",rt:RegexQuery.IRegexQuery},{a:2,n:"ANewLine",t:8,sn:"ANewLine",rt:RegexQuery.IRegexQuery},{a:2,n:"ASpace",t:8,sn:"ASpace",rt:RegexQuery.IRegexQuery},{a:2,n:"ATab",t:8,sn:"ATab",rt:RegexQuery.IRegexQuery},{a:2,n:"AWhiteSpace",t:8,sn:"AWhiteSpace",rt:RegexQuery.IRegexQuery},{a:2,n:"AWord",t:8,sn:"AWord",rt:RegexQuery.IRegexQuery},{a:2,n:"AWordBoundary",t:8,sn:"AWordBoundary",rt:RegexQuery.IRegexQuery},{a:2,n:"AnyCharExceptNewLine",t:8,sn:"AnyCharExceptNewLine",rt:RegexQuery.IRegexQuery},{a:2,n:"AnyOf",t:8,pi:[{n:"characters",pt:System.Array.type(System.Char),ps:0}],sn:"AnyOf",rt:RegexQuery.IRegexQuery,p:[System.Array.type(System.Char)]},{a:2,n:"AnyOf",t:8,pi:[{n:"characters",pt:System.String,ps:0}],sn:"AnyOf$1",rt:RegexQuery.IRegexQuery,p:[System.String]},{a:2,n:"AtEndOfString",t:8,sn:"AtEndOfString",rt:RegexQuery.IRegexQuery},{a:2,n:"AtStartOfString",t:8,sn:"AtStartOfString",rt:RegexQuery.IRegexQuery},{a:2,n:"BeginFollowedBy",t:8,sn:"BeginFollowedBy",rt:RegexQuery.IRegexQuery},{a:2,n:"BeginGroup",t:8,sn:"BeginGroup",rt:RegexQuery.IRegexQuery},{a:2,n:"BeginNotFollowedBy",t:8,sn:"BeginNotFollowedBy",rt:RegexQuery.IRegexQuery},{a:2,n:"BeginningOfString",t:8,sn:"BeginningOfString",rt:RegexQuery.IRegexQuery},{a:2,n:"ButOnly",t:8,pi:[{n:"quantity",pt:System.UInt32,ps:0}],sn:"ButOnly",rt:RegexQuery.IRegexQuery,p:[System.UInt32]},{a:2,n:"ButOnlyBetween",t:8,pi:[{n:"fromCount",pt:System.UInt32,ps:0},{n:"toCount",pt:System.UInt32,ps:1}],sn:"ButOnlyBetween",rt:RegexQuery.IRegexQuery,p:[System.UInt32,System.UInt32]},{a:2,n:"ButOnlyMoreThan",t:8,pi:[{n:"quantity",pt:System.UInt32,ps:0}],sn:"ButOnlyMoreThan",rt:RegexQuery.IRegexQuery,p:[System.UInt32]},{a:2,n:"ButOnlyNoneOrMore",t:8,sn:"ButOnlyNoneOrMore",rt:RegexQuery.IRegexQuery},{a:2,n:"ButOnlyNoneOrOne",t:8,sn:"ButOnlyNoneOrOne",rt:RegexQuery.IRegexQuery},{a:2,n:"ButOnlyOne",t:8,sn:"ButOnlyOne",rt:RegexQuery.IRegexQuery},{a:2,n:"ButOnlyOneOrMore",t:8,sn:"ButOnlyOneOrMore",rt:RegexQuery.IRegexQuery},{a:2,n:"CharsBetween",t:8,pi:[{n:"fromChar",pt:System.Char,ps:0},{n:"toChar",pt:System.Char,ps:1}],sn:"CharsBetween",rt:RegexQuery.IRegexQuery,p:[System.Char,System.Char]},{a:2,n:"EndFollowedBy",t:8,sn:"EndFollowedBy",rt:RegexQuery.IRegexQuery},{a:2,n:"EndGroup",t:8,sn:"EndGroup",rt:RegexQuery.IRegexQuery},{a:2,n:"EndNotFollowedBy",t:8,sn:"EndNotFollowedBy",rt:RegexQuery.IRegexQuery},{a:2,n:"EndOfString",t:8,sn:"EndOfString",rt:RegexQuery.IRegexQuery},{a:2,n:"FollowedBy",t:8,pi:[{n:"content",pt:System.String,ps:0}],sn:"FollowedBy",rt:RegexQuery.IRegexQuery,p:[System.String]},{a:2,n:"Group",t:8,pi:[{n:"content",pt:System.String,ps:0}],sn:"Group",rt:RegexQuery.IRegexQuery,p:[System.String]},{a:2,n:"NotAWhiteSpace",t:8,sn:"NotAWhiteSpace",rt:RegexQuery.IRegexQuery},{a:2,n:"NotAWord",t:8,sn:"NotAWord",rt:RegexQuery.IRegexQuery},{a:2,n:"NotAWordBoundary",t:8,sn:"NotAWordBoundary",rt:RegexQuery.IRegexQuery},{a:2,n:"NotAnyOf",t:8,pi:[{n:"characters",pt:System.Array.type(System.Char),ps:0}],sn:"NotAnyOf",rt:RegexQuery.IRegexQuery,p:[System.Array.type(System.Char)]},{a:2,n:"NotFollowedBy",t:8,pi:[{n:"content",pt:System.String,ps:0}],sn:"NotFollowedBy",rt:RegexQuery.IRegexQuery,p:[System.String]},{a:2,n:"Or",t:8,sn:"Or",rt:RegexQuery.IRegexQuery},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:System.String},{a:2,n:"Query",t:16,rt:System.String,g:{a:2,n:"get_Query",t:8,rt:System.String,fg:"Query"},s:{a:1,n:"set_Query",t:8,p:[System.String],rt:System.Void,fs:"Query"},fn:"Query"},{a:1,n:"_openedGroup",t:4,rt:System.Boolean,sn:"_openedGroup",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,backing:!0,n:"<Query>k__BackingField",t:4,rt:System.String,sn:"Query"}]}},$scope:RegexQuery,$module:"RegexQuery",fields:{_openedGroup:!1,Query:null},alias:["Query","RegexQuery$IRegexQuery$Query","toString","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ToString","BeginningOfString","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginningOfString","EndOfString","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndOfString","Group","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$Group","BeginGroup","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginGroup","EndGroup","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndGroup","AnyOf","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$AnyOf","AnyOf$1","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$AnyOf$1","NotAnyOf","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$NotAnyOf","CharsBetween","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$CharsBetween","ButOnly","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnly","ButOnlyOne","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyOne","ButOnlyNoneOrOne","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyNoneOrOne","ButOnlyNoneOrMore","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyNoneOrMore","ButOnlyOneOrMore","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyOneOrMore","ButOnlyBetween","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyBetween","ButOnlyMoreThan","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$ButOnlyMoreThan","Or","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$Or","FollowedBy","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$FollowedBy","NotFollowedBy","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$NotFollowedBy","BeginFollowedBy","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginFollowedBy","EndFollowedBy","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndFollowedBy","BeginNotFollowedBy","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$BeginNotFollowedBy","EndNotFollowedBy","RegexQuery$RegexQuery$Interfaces$IRegexQueryActions$EndNotFollowedBy","ADate","RegexQuery$IRegexQueryPatterns$ADate","ADate$1","RegexQuery$IRegexQueryPatterns$ADate$1","ASpace","RegexQuery$IRegexQueryTokens$ASpace","ADigit","RegexQuery$IRegexQueryTokens$ADigit","AWord","RegexQuery$IRegexQueryTokens$AWord","NotAWord","RegexQuery$IRegexQueryTokens$NotAWord","ANewLine","RegexQuery$IRegexQueryTokens$ANewLine","AtStartOfString","RegexQuery$IRegexQueryTokens$AtStartOfString","AtEndOfString","RegexQuery$IRegexQueryTokens$AtEndOfString","ATab","RegexQuery$IRegexQueryTokens$ATab","ACarriageReturn","RegexQuery$IRegexQueryTokens$ACarriageReturn","AWhiteSpace","RegexQuery$IRegexQueryTokens$AWhiteSpace","NotAWhiteSpace","RegexQuery$IRegexQueryTokens$NotAWhiteSpace","AnyCharExceptNewLine","RegexQuery$IRegexQueryTokens$AnyCharExceptNewLine","AWordBoundary","RegexQuery$IRegexQueryTokens$AWordBoundary","NotAWordBoundary","RegexQuery$IRegexQueryTokens$NotAWordBoundary"],ctors:{ctor:function(){this.$initialize();this.Query=""}},methods:{toString:function(){return this.Query},BeginningOfString:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.StartOfString||""),this},EndOfString:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.EndOfString||""),this},Group:function(content){return this.BeginGroup(),this.Query=(this.Query||"")+(content||""),this.EndGroup(),this},BeginGroup:function(){return this.Query=(this.Query||"")+"(",this._openedGroup=!0,this},EndGroup:function(){return this.Query=(this.Query||"")+")",this._openedGroup=!1,this},AnyOf:function(characters){return this.AnyOf$1(System.String.fromCharArray(characters))},AnyOf$1:function(characters){return this.Query=(this.Query||"")+(System.String.format("[{0}]",[characters])||""),this},NotAnyOf:function(characters){return this.Query=(this.Query||"")+(System.String.format("[^{0}]",[characters])||""),this},CharsBetween:function(fromChar,toChar){return this.Query=(this.Query||"")+(System.String.format("[{0}-{1}]",Bridge.box(fromChar,System.Char,String.fromCharCode,System.Char.getHashCode),Bridge.box(toChar,System.Char,String.fromCharCode,System.Char.getHashCode))||""),this},ButOnly:function(quantity){return this.Query=(this.Query||"")+(System.String.format("{{{0}}}",[Bridge.box(quantity,System.UInt32)])||""),this},ButOnlyOne:function(){return this.Query=(this.Query||"")+"{1}",this},ButOnlyNoneOrOne:function(){return this.Query=(this.Query||"")+"?",this},ButOnlyNoneOrMore:function(){return this.Query=(this.Query||"")+"*",this},ButOnlyOneOrMore:function(){return this.Query=(this.Query||"")+"+",this},ButOnlyBetween:function(fromCount,toCount){return this.Query=(this.Query||"")+(System.String.format("{{{0},{1}}}",Bridge.box(fromCount,System.UInt32),Bridge.box(toCount,System.UInt32))||""),this},ButOnlyMoreThan:function(quantity){return this.Query=(this.Query||"")+(System.String.format("{{{0},}}",[Bridge.box(quantity,System.UInt32)])||""),this},Or:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.Or||""),this},FollowedBy:function(content){return this.BeginGroup(),this.Query=(this.Query||"")+(RegexQuery.RegexTokens.FollowedBy||"")+(content||""),this.EndGroup(),this},NotFollowedBy:function(content){return this.BeginGroup(),this.Query=(this.Query||"")+(RegexQuery.RegexTokens.NotFollowedBy||"")+(content||""),this.EndGroup(),this},BeginFollowedBy:function(){return this.BeginGroup(),this.Query=(this.Query||"")+(RegexQuery.RegexTokens.FollowedBy||""),this},EndFollowedBy:function(){return this.EndGroup(),this},BeginNotFollowedBy:function(){return this.BeginGroup(),this.Query=(this.Query||"")+(RegexQuery.RegexTokens.NotFollowedBy||""),this},EndNotFollowedBy:function(){return this.EndGroup(),this},ADate:function(){return this.ADate$1(RegexQuery.Separator.All)},ADate$1:function(separator){return separator===void 0&&(separator=3),this.Query=(this.Query||"")+(RegexQuery.RegexTokens.CharsBetween(48,51)||"")+String.fromCharCode(63)+(RegexQuery.RegexTokens.CharsBetween(48,57)||"")+"("+(RegexQuery.Separators.Resolve(separator)||"")+")"+(RegexQuery.RegexTokens.CharsBetween(48,51)||"")+String.fromCharCode(63)+(RegexQuery.RegexTokens.CharsBetween(48,57)||"")+"("+(RegexQuery.Separators.Resolve(separator)||"")+")"+(RegexQuery.RegexTokens.CharsBetween(49,57)||"")+(RegexQuery.RegexTokens.Digit||"")+(RegexQuery.RegexTokens.QuantityOfPreceding(3)||""),this},ASpace:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.WhiteSpace||""),this},ADigit:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.Digit||""),this},AWord:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.Word||""),this},NotAWord:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.NotWord||""),this},ANewLine:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.NewLine||""),this},AtStartOfString:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.StartOfString||""),this},AtEndOfString:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.EndOfString||""),this},ATab:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.Tab||""),this},ACarriageReturn:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.CarriageReturn||""),this},AWhiteSpace:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.WhiteSpace||""),this},NotAWhiteSpace:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.NotWhiteSpace||""),this},AnyCharExceptNewLine:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.AnyCharExceptNewLine||""),this},AWordBoundary:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.WordBoundary||""),this},NotAWordBoundary:function(){return this.Query=(this.Query||"")+(RegexQuery.RegexTokens.NotWordBoundary||""),this}}}),Bridge.init(),RegexQuery})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJSZWdleFF1ZXJ5Lm1pbi5qcyIsCiAgInNvdXJjZVJvb3QiOiAiIiwKICAic291cmNlcyI6IFtdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICIiLAogICJzb3VyY2VzQ29udGVudCI6IFtdCn0K
